-- 1. USER
CREATE TABLE "USER" (
    user_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_email VARCHAR2(50) UNIQUE NOT NULL,
    user_pw VARCHAR2(255) NOT NULL,
    user_nick VARCHAR2(50) UNIQUE NOT NULL,
    user_name VARCHAR2(50) NOT NULL,
    user_phone VARCHAR2(20) UNIQUE NOT NULL,
    user_addr VARCHAR2(100),
    user_auth VARCHAR2(20) DEFAULT 'ROLE_USER' CHECK (user_auth IN ('ROLE_USER', 'ROLE_ADMIN')),
    user_regi DATE DEFAULT SYSDATE NOT NULL
);

-- 2. CATEGORY
CREATE TABLE CATEGORY (
    category_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    category_name VARCHAR2(30) UNIQUE NOT NULL
);

-- 3. PRODUCT
CREATE TABLE PRODUCT (
    product_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    category_id NUMBER NOT NULL,
    user_id NUMBER NOT NULL,
    product_name VARCHAR2(100) NOT NULL,
    product_content CLOB,
    product_price NUMBER NOT NULL,
    product_regi DATE DEFAULT SYSDATE NOT NULL,
    product_stock NUMBER DEFAULT 0 NOT NULL,
    product_view NUMBER DEFAULT 0,
    FOREIGN KEY (category_id) REFERENCES CATEGORY(category_id),
    FOREIGN KEY (user_id) REFERENCES "USER"(user_id)
);

-- 4. P_IMG (Product Image)
CREATE TABLE P_IMG (
    p_img_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    product_id NUMBER NOT NULL,
    p_img_name VARCHAR2(255) NOT NULL,
    p_img_enum VARCHAR2(20) NOT NULL CHECK (p_img_enum IN ('THUMBNAIL', 'DESCRIPTION')),
    FOREIGN KEY (product_id) REFERENCES PRODUCT(product_id)
);

-- 5. CART
CREATE TABLE CART (
    cart_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id NUMBER NOT NULL,
    product_id NUMBER NOT NULL,
    cart_count NUMBER DEFAULT 1 NOT NULL,
    FOREIGN KEY (user_id) REFERENCES "USER"(user_id),
    FOREIGN KEY (product_id) REFERENCES PRODUCT(product_id)
);

-- 6. ORDERS
CREATE TABLE ORDERS (
    order_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id NUMBER NOT NULL,
    order_date DATE DEFAULT SYSDATE NOT NULL,
    order_total NUMBER NOT NULL,
    order_status VARCHAR2(30) DEFAULT 'ORDER_OK' NOT NULL CHECK (order_status IN ('ORDER_OK', 'CONFIRM', 'REFUND', 'REFUND_OK')),
    FOREIGN KEY (user_id) REFERENCES "USER"(user_id)
);

-- 7. ORDER_DETAIL
CREATE TABLE ORDER_DETAIL (
    order_detail_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    order_id NUMBER NOT NULL,
    product_id NUMBER NOT NULL,
    order_count NUMBER NOT NULL,
    order_price NUMBER NOT NULL,
    FOREIGN KEY (order_id) REFERENCES ORDERS(order_id),
    FOREIGN KEY (product_id) REFERENCES PRODUCT(product_id)
);

-- 8. DELIVERY
CREATE TABLE DELIVERY (
    delivery_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    order_id NUMBER NOT NULL,
    delivery_name VARCHAR2(100) NOT NULL,
    delivery_phone VARCHAR2(20) NOT NULL,
    delivery_zipcode VARCHAR2(10),
    delivery_address1 VARCHAR2(255),
    delivery_address2 VARCHAR2(255),
    delivery_check NUMBER(1) DEFAULT 0 NOT NULL CHECK (delivery_check IN (0, 1)),
    FOREIGN KEY (order_id) REFERENCES ORDERS(order_id)
);

-- 9. REVIEW
CREATE TABLE REVIEW (
    review_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    order_detail_id NUMBER NOT NULL,
    review_content CLOB,
    review_star NUMBER(1) NOT NULL CHECK (review_star BETWEEN 1 AND 5),
    review_regi DATE DEFAULT SYSDATE NOT NULL,
    FOREIGN KEY (order_detail_id) REFERENCES ORDER_DETAIL(order_detail_id)
);

-- 10. QUESTION
CREATE TABLE QUESTION (
    question_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    product_id NUMBER NOT NULL,
    user_id NUMBER NOT NULL,
    question_content CLOB,
    question_regi DATE DEFAULT SYSDATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES PRODUCT(product_id),
    FOREIGN KEY (user_id) REFERENCES "USER"(user_id)
);

-- 11. CHATROOM
CREATE TABLE CHATROOM (
    chatroom_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    buyer_id NUMBER NOT NULL,
    seller_id NUMBER NOT NULL,
    product_id NUMBER NOT NULL,
    FOREIGN KEY (buyer_id) REFERENCES "USER"(user_id),
    FOREIGN KEY (seller_id) REFERENCES "USER"(user_id),
    FOREIGN KEY (product_id) REFERENCES PRODUCT(product_id)
);

-- 12. CHAT
CREATE TABLE CHAT (
    chat_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    chatroom_id NUMBER NOT NULL,
    sender_id NUMBER NOT NULL,
    message CLOB NOT NULL,
    message_time DATE DEFAULT SYSDATE NOT NULL,
    FOREIGN KEY (chatroom_id) REFERENCES CHATROOM(chatroom_id),
    FOREIGN KEY (sender_id) REFERENCES "USER"(user_id)
);

-- 13. NOTICE
CREATE TABLE NOTICE (
    notice_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    admin_id NUMBER NOT NULL,
    notice_title VARCHAR2(200) NOT NULL,
    notice_content CLOB NOT NULL,
    notice_regi DATE DEFAULT SYSDATE NOT NULL,
    FOREIGN KEY (admin_id) REFERENCES "USER"(user_id)
);

-- 14. CARD
CREATE TABLE CARD (
    card_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id NUMBER NOT NULL,
    card_num VARCHAR2(20) NOT NULL,
    card_date VARCHAR2(10) NOT NULL,
    card_cvc VARCHAR2(5) NOT NULL,
    FOREIGN KEY (user_id) REFERENCES "USER"(user_id)
);

-- 15. ADDRESS
CREATE TABLE ADDRESS (
    address_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id NUMBER NOT NULL,
    address_name VARCHAR2(100),
    address_phone VARCHAR2(20),
    address_zipcode VARCHAR2(10),
    address1 VARCHAR2(255),
    address2 VARCHAR2(255),
    address_check NUMBER(1) DEFAULT 0 CHECK (address_check IN (0,1)),
    FOREIGN KEY (user_id) REFERENCES "USER"(user_id)
);
